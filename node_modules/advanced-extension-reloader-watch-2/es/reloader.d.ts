import { Options } from './interfaces';
export default class Reloader {
    private port;
    private watch_dir;
    private httpserver;
    private io;
    private changed_files;
    private first_reload_completed;
    private reload_attempts;
    private listening;
    private attempted_to_reload_once_while_listening;
    private reload_delay;
    constructor(options?: {
        port?: number;
        watch_dir?: string;
    });
    private listen;
    watch: ({ callback, }?: {
        callback?: () => void;
    }) => void;
    reload: ({ extension_id, hard, all_tabs, always_open_popup, play_notifications, min_interval_between_extension_reloads, delay_after_extension_reload, delay_after_tab_reload, listen_message_response_timeout, manifest_path, hard_paths, soft_paths, all_tabs_paths, one_tab_paths, always_open_popup_paths, }?: Options, reloading_from_advanced_extension_reloader_watch_1?: boolean) => boolean;
    play_error_notification: ({ extension_id }?: {
        extension_id?: string;
    }) => void;
    private play_manifest_error_notification;
    private check_if_matched_filename;
    private check_if_need_to_open_popup;
    private match_val;
}
